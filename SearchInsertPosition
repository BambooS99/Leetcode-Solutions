# The isBadVersion API is already defined for you.
# @param version, an integer
# @return an integer
# def isBadVersion(version):

class Solution:
    def firstBadVersion(self, n):
        """
        :type n: int
        :rtype: int
        """
        l, r = 0, n 
        
        while (l <=r):
            mid = (l + r) // 2
            #if we find the target 
            if isBadVersion(mid-1)==False and isBadVersion(mid)== True:
                return mid
            #elimate the half of the target in which the answer cannot lie
            else:
                if isBadVersion(mid) == False:
                    l = mid + 1
                else:
                    r = mid -1
        return -1
